>>>Python练习：安装与运行

请大家根据教程下载安装 python3.7 解释器。
安装好以后，请大家写一段代码
在屏幕上打印出
这2行代码 先在Python交互式命令行中运行。
再将代码存入文件，用Python解释器去执行该文件。
请大家点击此处链接，观看讲解视频
Python 解释器 的作用是就像一个翻译，将Python代码翻译成计算机能理解的机器代码去执行。
如果我们想在命令行不需要输入 python.exe的全路径就能执行，就应该设置环境变量 PATH 的值，里面加上解释器程序的目录。
Python代码第一行语句前面可以空好几行
执行下面的语句可以成功，不会报错
请大家点击此处链接，观看讲解视频
扫码分享给朋友，一起学更有动力哦
>>答案与解析
请大家根据教程下载安装 python3.7 解释器。
安装好以后，请大家写一段代码
在屏幕上打印出
这2行代码 先在Python交互式命令行中运行。
再将代码存入文件，用Python解释器去执行该文件。
请大家点击此处链接，观看讲解视频
Python 解释器 的作用是就像一个翻译，将Python代码翻译成计算机能理解的机器代码去执行。
如果我们想在命令行不需要输入 python.exe的全路径就能执行，就应该设置环境变量 PATH 的值，里面加上解释器程序的目录。
Python代码第一行语句前面可以空好几行
执行下面的语句可以成功，不会报错
请大家点击此处链接，观看讲解视频
扫码分享给朋友，一起学更有动力哦
>>>Python练习：数字运算

请大家写一行代码，计算并打印出 993 + 196 的和， 乘以 7 的积， 然后除以3
这行代码 先在Python交互式命令行中运行
再将代码存入文件，用Python解释器去执行该文件
答案与解析
请大家写一行代码，计算并打印出 993 + 196 的和，乘以 7 的积， 然后除以3 的  商 和 余数
将代码存入文件，用Python解释器去执行该文件
答案与解析
请大家写一行代码，查看对象 ‘abc’ 的类型
将代码存入文件，用Python解释器去执行该文件
答案与解析
扫码分享给朋友，一起学更有动力哦
查看对象的类型只需要用 内置函数 type
请大家点击此处链接，观看讲解视频
>>答案与解析
请大家写一行代码，计算并打印出 993 + 196 的和， 乘以 7 的积， 然后除以3
这行代码 先在Python交互式命令行中运行
再将代码存入文件，用Python解释器去执行该文件
答案与解析
请大家写一行代码，计算并打印出 993 + 196 的和，乘以 7 的积， 然后除以3 的  商 和 余数
将代码存入文件，用Python解释器去执行该文件
答案与解析
请大家写一行代码，查看对象 ‘abc’ 的类型
将代码存入文件，用Python解释器去执行该文件
答案与解析
扫码分享给朋友，一起学更有动力哦
查看对象的类型只需要用 内置函数 type
请大家点击此处链接，观看讲解视频
>>>Python练习：变量和注释

判断下面的说法是否正确
变量就像是对象的名字，程序代码代码访问对象，可以通过变量名去访问对象。
没有任何引用的对象，会被Python解释器清除
num = num + 5  可以简写为 num += 5
在Python语言 中  ，所有类型的数据都是对象
解释器执行完下面的3代码后
变量a2的值，也会变成 ‘老白’ , 因为 第2行代码 让 a1 和 a2 都对应同一个对象了， a1变了，a2也会跟着变。
答案与解析
请大家点击此处链接，观看讲解视频
如下的变量命名中，错误的有哪些
答案与解析
请大家点击此处链接，观看讲解视频
在python交互式命令行，执行如下Python语句，解释器报错，是什么原因？
答案与解析
请大家点击此处链接，观看讲解视频
你们公司每月的净利润计算公式如下
请写一段代码， 计算并打印出 每月的净利润。 代码中合理的使用变量 和注释。
具体的 收入和支出 数值可以先使用临时数字。
答案与解析
请大家点击此处链接，观看讲解视频
扫码分享给朋友，一起学更有动力哦
VIP小班学员请联系老师获取补充练习，并做阶段学习交流
下面的说法，正确的有哪些？
变量就像是对象的名字，程序代码代码访问对象，可以通过变量名去访问对象。 （对）
没有任何引用的对象，会被Python解释器清除  （对）
num = num + 5  可以简写为 num += 5      （对）
在Python语言 中  ，所有类型的数据都是对象  （对）
解释器执行完下面的3代码后
变量a2的值，也会变成 ‘老白’ , 因为 第2行代码 让 a1 和 a2 都对应同一个对象了， a1变了，a2也会跟着变。（错）
如下的变量命名中，错误的有哪些
在python交互式命令行，执行如下Python语句，解释器报错，是什么原因？
答：因为Python是大小写敏感的语言， print语句中的变量名V大写了，和定义的地方不一致，解释器运行时找不到名为Var1的变量
这样写，比用计算器好在哪里？
好处是，以后，每月需要计算收入，只要修改对应的 数字即可，更清晰直观。
>>答案与解析
判断下面的说法是否正确
变量就像是对象的名字，程序代码代码访问对象，可以通过变量名去访问对象。
没有任何引用的对象，会被Python解释器清除
num = num + 5  可以简写为 num += 5
在Python语言 中  ，所有类型的数据都是对象
解释器执行完下面的3代码后
变量a2的值，也会变成 ‘老白’ , 因为 第2行代码 让 a1 和 a2 都对应同一个对象了， a1变了，a2也会跟着变。
答案与解析
请大家点击此处链接，观看讲解视频
如下的变量命名中，错误的有哪些
答案与解析
请大家点击此处链接，观看讲解视频
在python交互式命令行，执行如下Python语句，解释器报错，是什么原因？
答案与解析
请大家点击此处链接，观看讲解视频
你们公司每月的净利润计算公式如下
请写一段代码， 计算并打印出 每月的净利润。 代码中合理的使用变量 和注释。
具体的 收入和支出 数值可以先使用临时数字。
答案与解析
请大家点击此处链接，观看讲解视频
扫码分享给朋友，一起学更有动力哦
VIP小班学员请联系老师获取补充练习，并做阶段学习交流
下面的说法，正确的有哪些？
变量就像是对象的名字，程序代码代码访问对象，可以通过变量名去访问对象。 （对）
没有任何引用的对象，会被Python解释器清除  （对）
num = num + 5  可以简写为 num += 5      （对）
在Python语言 中  ，所有类型的数据都是对象  （对）
解释器执行完下面的3代码后
变量a2的值，也会变成 ‘老白’ , 因为 第2行代码 让 a1 和 a2 都对应同一个对象了， a1变了，a2也会跟着变。（错）
如下的变量命名中，错误的有哪些
在python交互式命令行，执行如下Python语句，解释器报错，是什么原因？
答：因为Python是大小写敏感的语言， print语句中的变量名V大写了，和定义的地方不一致，解释器运行时找不到名为Var1的变量
这样写，比用计算器好在哪里？
好处是，以后，每月需要计算收入，只要修改对应的 数字即可，更清晰直观。
>>>Python练习：字符串1

请大家写一行代码，定义一个Python字符串变量 内容为  hello world
答案与解析
请大家点击此处链接，观看讲解视频
请大家写一行代码，定义一个Python字符串变量 内容为  你好世界
答案与解析
请大家点击此处链接，观看讲解视频
请大家写一行代码，定义一个Python字符串变量 内容为   他说：'你好'
注意，字符串里面有英文的单引号
再写一行代码，定义一个Python字符串 内容为   他说："你好"
注意，字符串里面有英文的双引号
答案与解析
请大家点击此处链接，观看讲解视频
请大家写一行代码，定义一个Python字符串变量 内容为
注意，字符串里面有新的一行
答案与解析
请大家点击此处链接，观看讲解视频
有如下的代码，定义了一个Python字符串
请接下来写一行代码，使用字符串切片的方法 ，打印出 str1里面的人名字。
请大家点击此处链接，观看讲解视频
扫码分享给朋友，一起学更有动力哦
字符串变量定义用单引号，双引号，三引号都可以，如下
中文字符串变量定义也是一样，用单引号，双引号，三引号都可以，如下
如果字符串里面有引号，那么定义字符串就应该使用不同的引号。
里面是单引号，外面就用双引号。
里面是双引号，外面就用单引号。
如果字符串里面有换行符，我们定义字符串的时候可以使用三引号，而且字符串里面有引号，那么外面的三引号应该使用不同的类型的引号
也可以使用换行符
可以使用正数下标，数到名字的前面的位置，注意是下标是从0开始，
可以把光标放在字符的前面，按右方向键 一个个的移过去，边移边数，
发现名字第一个字符 黑 下标是10
而名字的结束字符 月 下标是13.
特别要注意的是：切片的结束下标 是不包含该下标对应的字符的，如果大家写str1[10:13],就会发现
只有 黑羽白 3个字， 漏掉了最后的 月 字
所以结束下标要加1，就是14，这样才能包含 月 这个结束字符
像这样

由于名字正好在字符串的结尾，所以也可以结束下标不写，表示到字符串的结尾

也可以不用数名字的开始位置，因为人名字就是四个字符，可以用内置函数len得到长度,减去4就是人名的开始位置，

还可以使用负数下标，从后往前数，黑 这个字的下标就是-4
>>答案与解析
请大家写一行代码，定义一个Python字符串变量 内容为  hello world
答案与解析
请大家点击此处链接，观看讲解视频
请大家写一行代码，定义一个Python字符串变量 内容为  你好世界
答案与解析
请大家点击此处链接，观看讲解视频
请大家写一行代码，定义一个Python字符串变量 内容为   他说：'你好'
注意，字符串里面有英文的单引号
再写一行代码，定义一个Python字符串 内容为   他说："你好"
注意，字符串里面有英文的双引号
答案与解析
请大家点击此处链接，观看讲解视频
请大家写一行代码，定义一个Python字符串变量 内容为
注意，字符串里面有新的一行
答案与解析
请大家点击此处链接，观看讲解视频
有如下的代码，定义了一个Python字符串
请接下来写一行代码，使用字符串切片的方法 ，打印出 str1里面的人名字。
请大家点击此处链接，观看讲解视频
扫码分享给朋友，一起学更有动力哦
字符串变量定义用单引号，双引号，三引号都可以，如下
中文字符串变量定义也是一样，用单引号，双引号，三引号都可以，如下
如果字符串里面有引号，那么定义字符串就应该使用不同的引号。
里面是单引号，外面就用双引号。
里面是双引号，外面就用单引号。
如果字符串里面有换行符，我们定义字符串的时候可以使用三引号，而且字符串里面有引号，那么外面的三引号应该使用不同的类型的引号
也可以使用换行符
可以使用正数下标，数到名字的前面的位置，注意是下标是从0开始，
可以把光标放在字符的前面，按右方向键 一个个的移过去，边移边数，
发现名字第一个字符 黑 下标是10
而名字的结束字符 月 下标是13.
特别要注意的是：切片的结束下标 是不包含该下标对应的字符的，如果大家写str1[10:13],就会发现
只有 黑羽白 3个字， 漏掉了最后的 月 字
所以结束下标要加1，就是14，这样才能包含 月 这个结束字符
像这样

由于名字正好在字符串的结尾，所以也可以结束下标不写，表示到字符串的结尾

也可以不用数名字的开始位置，因为人名字就是四个字符，可以用内置函数len得到长度,减去4就是人名的开始位置，

还可以使用负数下标，从后往前数，黑 这个字的下标就是-4
>>>Python练习：函数

如下，
我们这样定义一个函数后，下面哪些调用方法是错误的
答案与解析
请大家点击此处链接，观看讲解视频
请描述一下，下面两个函数定义
有什么不同？
答案与解析
请大家点击此处链接，观看讲解视频
下面这段代码有什么问题？
答案与解析
请大家点击此处链接，观看讲解视频
请开发一个函数，该函数 接受两个字符串参数，
第1个参数格式如下，
第2个参数格式如下，
规定参数字符串中的 人名 和 年龄 都是 两个字符
我们的函数需要 获取参数中的人名和年龄，并以这样的格式 小王:18返回。
实现该函数后，请调用 该函数，依次传入下面的参数。
调用函数传参数时，分别使用  指定参数名调用  和 不指定参数名调用 的方式。
最后，将调用返回结果的返回值打印出来
答案与解析
请大家点击此处链接，观看讲解视频
扫码分享给朋友，一起学更有动力哦
如下，
我们这样定义一个函数后，下面哪些调用方法是错误的
请描述一下，下面两个函数定义
有什么不同？
答： 前者是 计算结果作为返回值返回， 后者 只是打印出计算结果，返回值为None
答： 函数必须先定义再调用， 不能先调用再定义。
函数定义如下
>>答案与解析
如下，
我们这样定义一个函数后，下面哪些调用方法是错误的
答案与解析
请大家点击此处链接，观看讲解视频
请描述一下，下面两个函数定义
有什么不同？
答案与解析
请大家点击此处链接，观看讲解视频
下面这段代码有什么问题？
答案与解析
请大家点击此处链接，观看讲解视频
请开发一个函数，该函数 接受两个字符串参数，
第1个参数格式如下，
第2个参数格式如下，
规定参数字符串中的 人名 和 年龄 都是 两个字符
我们的函数需要 获取参数中的人名和年龄，并以这样的格式 小王:18返回。
实现该函数后，请调用 该函数，依次传入下面的参数。
调用函数传参数时，分别使用  指定参数名调用  和 不指定参数名调用 的方式。
最后，将调用返回结果的返回值打印出来
答案与解析
请大家点击此处链接，观看讲解视频
扫码分享给朋友，一起学更有动力哦
如下，
我们这样定义一个函数后，下面哪些调用方法是错误的
请描述一下，下面两个函数定义
有什么不同？
答： 前者是 计算结果作为返回值返回， 后者 只是打印出计算结果，返回值为None
答： 函数必须先定义再调用， 不能先调用再定义。
函数定义如下
>>>Python练习：input输入信息

你们公司每月的净利润计算公式如下
请大家写Python程序，合理的使用变量 和注释 ，计算 并 打印出 每月的净利润。
具体的 收入和支出 数值，使用input函数，让用户输入。
答案与解析
请定义一个函数printlen, 该函数中让用户输入一个字符串， 该函数打印出用户输入的这个字符串的 长度
比如 用户输入 123456789， 该函数应该打印出：长度为9
答案与解析
VIP小班学员请联系老师获取补充练习，并做阶段学习交流
请大家点击此处链接，观看讲解视频
扫码分享给朋友，一起学更有动力哦
这个题目的一个注意点是，input返回的是！！数字对象，即使用户输入的是数字，返回的也是字符串，只是字符串中是数字字符。
如果要对返回的结果进行数学计算，需要把字符串转化为数字对象，转化为整数使用内置函数int，转化为小数使用内置函数float
>>答案与解析
你们公司每月的净利润计算公式如下
请大家写Python程序，合理的使用变量 和注释 ，计算 并 打印出 每月的净利润。
具体的 收入和支出 数值，使用input函数，让用户输入。
答案与解析
请定义一个函数printlen, 该函数中让用户输入一个字符串， 该函数打印出用户输入的这个字符串的 长度
比如 用户输入 123456789， 该函数应该打印出：长度为9
答案与解析
VIP小班学员请联系老师获取补充练习，并做阶段学习交流
请大家点击此处链接，观看讲解视频
扫码分享给朋友，一起学更有动力哦
这个题目的一个注意点是，input返回的是！！数字对象，即使用户输入的是数字，返回的也是字符串，只是字符串中是数字字符。
如果要对返回的结果进行数学计算，需要把字符串转化为数字对象，转化为整数使用内置函数int，转化为小数使用内置函数float
>>>Python练习：元组和列表

有如下的代码，定义了一个Python列表 变量
请接下来写一行代码，打印出var1这个列表变量里面的 字符串 hello world!
答案与解析
请大家点击此处链接，观看讲解视频
有如下的代码，定义了一个Python列表 变量
请接下来写一行代码，打印出var1这个列表变量里面的 人名字 黑羽白月
答案与解析
请大家点击此处链接，观看讲解视频
有如下的代码，定义了一个Python列表 变量
请分别用一行代码，实现：
答案与解析
请大家点击此处链接，观看讲解视频
有如下的代码，定义了一个Python列表 变量
请接下来写一行代码， 修改var1这个列表变量里面的 人名字 黑羽白月 为 拜月童子
答案与解析
请大家点击此处链接，观看讲解视频
判断一下，下面的 代码，执行后打印出的结果是 hello， 还是 ok
请大家点击此处链接，观看讲解视频
 
判断一下，下面的 代码，执行后打印出的结果是 [‘hello’]， 还是 [‘ok’]
请大家点击此处链接，观看讲解视频

判断一下，下面的 代码，执行后打印出的结果是 [‘hello’]， 还是 [‘ok’]
请大家点击此处链接，观看讲解视频
答案与解析
前面这3题，如果看完视频讲解还不明白，请点击这里，观看白月黑羽和VIP小班学员的1对1讲解
判断下面的说法是否正确
列表和元组里面的元素可以是任意类型的对象，包括字符串、数字、列表、元组、函数
切片操作只能用在列表上，不能用在元组上，因为元组是不可改变的
有如下的代码，定义了一个Python列表 变量
我们可以说 ‘我的名字’ 是 var1 对应的列表里面的一个元素
请大家点击此处链接，观看讲解视频
VIP小班学员请联系老师获取补充练习，并做阶段学习交流
扫码分享给朋友，一起学更有动力哦
有如下的代码，定义了一个Python列表 变量
请接下来写一行代码，打印出var1这个列表变量里面的 字符串 hello world!
这个字符串是列表的最后一个元素，也可以说是列表的第3个元素
我们可以这样打印
也可以这样打印
有如下的代码，定义了一个Python列表 变量
请接下来写一行代码，打印出var1这个列表变量里面的 人名字 黑羽白月
这个人名字是列表的第2个元素（第2个元素本身也是列表） 里面的第二个元素
我们可以这样打印
有如下的代码，定义了一个Python列表 变量
请分别用一行代码，实现：
列表是可变数据类型，因为列表中的元素是可以被替换的。
修改var1这个列表变量里面的 hello world！ 为 Oh my God!
修改var1这个列表变量里面的 人名字 黑羽白月 为 拜月童子
有如下的代码，定义了一个Python列表 变量
请接下来写一行代码， 修改var1这个列表变量里面的 人名字 黑羽白月 为 拜月童子
元组(Tuple)是不可变数据类型，我们不能这样修改
因为 var1[1] 对应的正是里面的第2个元组对象。
要修改其内容， 只有把var1 这个列表对象的整个第2个元组对象替换掉。 因为列表的元素是可以修改的。
所以，可以这样
判断一下，下面的 代码，执行后打印出的结果是 hello， 还是 ok
答： 还是 ‘ok’ 。
这行代码让变量var 指向了 字符串对象 ‘ok’
这行代码调用函数，首先让参数变量arg也指向了 字符串对象 ‘ok’
后面函数里面执行
让参数变量arg指向关系发生了改变，它指向了另一个字符串对象 ‘hello’
但是，这不会改变 var指向的对象， var还是指向 字符串对象 ‘ok’
所以调用完后， print(var) 的结果，还是  ‘ok’
 
判断一下，下面的 代码，执行后打印出的结果是 [‘hello’]， 还是 [‘ok’]
答： 是[‘hello’] 。
这行代码让变量var 指向了 列表对象 [‘ok’]
这行代码调用函数，首先让参数变量arg也指向了 列表对象 [‘ok’]
后面函数里面执行
列表对象因为这行代码 发生了改变。
注意：是变量 arg 指向的列表对象 本身改变了，不是变量 arg  指向关系 发生改变。
所以  外面的 全局变量 var也指向这个列表对象， 列表对象本身改变，自然var 对应的值 也改变了。

判断一下，下面的 代码，执行后打印出的结果是 [‘hello’]， 还是 [‘ok’]
答： 是[‘ok’] 。
这行代码让变量var 指向了 列表对象 [‘ok’]
这行代码调用函数，首先让参数变量arg也指向了 列表对象 [‘ok’]
后面函数里面执行
让参数变量arg指向关系发生了改变，它指向了 另一个 列表对象 [‘hello’]
但是，这不会改变 var指向的对象， var还是指向 列表对象 [‘ok’]
所以调用完后， print(var) 的结果，还是  [‘ok’]
>>答案与解析
有如下的代码，定义了一个Python列表 变量
请接下来写一行代码，打印出var1这个列表变量里面的 字符串 hello world!
答案与解析
请大家点击此处链接，观看讲解视频
有如下的代码，定义了一个Python列表 变量
请接下来写一行代码，打印出var1这个列表变量里面的 人名字 黑羽白月
答案与解析
请大家点击此处链接，观看讲解视频
有如下的代码，定义了一个Python列表 变量
请分别用一行代码，实现：
答案与解析
请大家点击此处链接，观看讲解视频
有如下的代码，定义了一个Python列表 变量
请接下来写一行代码， 修改var1这个列表变量里面的 人名字 黑羽白月 为 拜月童子
答案与解析
请大家点击此处链接，观看讲解视频
判断一下，下面的 代码，执行后打印出的结果是 hello， 还是 ok
请大家点击此处链接，观看讲解视频
 
判断一下，下面的 代码，执行后打印出的结果是 [‘hello’]， 还是 [‘ok’]
请大家点击此处链接，观看讲解视频

判断一下，下面的 代码，执行后打印出的结果是 [‘hello’]， 还是 [‘ok’]
请大家点击此处链接，观看讲解视频
答案与解析
前面这3题，如果看完视频讲解还不明白，请点击这里，观看白月黑羽和VIP小班学员的1对1讲解
判断下面的说法是否正确
列表和元组里面的元素可以是任意类型的对象，包括字符串、数字、列表、元组、函数
切片操作只能用在列表上，不能用在元组上，因为元组是不可改变的
有如下的代码，定义了一个Python列表 变量
我们可以说 ‘我的名字’ 是 var1 对应的列表里面的一个元素
请大家点击此处链接，观看讲解视频
VIP小班学员请联系老师获取补充练习，并做阶段学习交流
扫码分享给朋友，一起学更有动力哦
有如下的代码，定义了一个Python列表 变量
请接下来写一行代码，打印出var1这个列表变量里面的 字符串 hello world!
这个字符串是列表的最后一个元素，也可以说是列表的第3个元素
我们可以这样打印
也可以这样打印
有如下的代码，定义了一个Python列表 变量
请接下来写一行代码，打印出var1这个列表变量里面的 人名字 黑羽白月
这个人名字是列表的第2个元素（第2个元素本身也是列表） 里面的第二个元素
我们可以这样打印
有如下的代码，定义了一个Python列表 变量
请分别用一行代码，实现：
列表是可变数据类型，因为列表中的元素是可以被替换的。
修改var1这个列表变量里面的 hello world！ 为 Oh my God!
修改var1这个列表变量里面的 人名字 黑羽白月 为 拜月童子
有如下的代码，定义了一个Python列表 变量
请接下来写一行代码， 修改var1这个列表变量里面的 人名字 黑羽白月 为 拜月童子
元组(Tuple)是不可变数据类型，我们不能这样修改
因为 var1[1] 对应的正是里面的第2个元组对象。
要修改其内容， 只有把var1 这个列表对象的整个第2个元组对象替换掉。 因为列表的元素是可以修改的。
所以，可以这样
判断一下，下面的 代码，执行后打印出的结果是 hello， 还是 ok
答： 还是 ‘ok’ 。
这行代码让变量var 指向了 字符串对象 ‘ok’
这行代码调用函数，首先让参数变量arg也指向了 字符串对象 ‘ok’
后面函数里面执行
让参数变量arg指向关系发生了改变，它指向了另一个字符串对象 ‘hello’
但是，这不会改变 var指向的对象， var还是指向 字符串对象 ‘ok’
所以调用完后， print(var) 的结果，还是  ‘ok’
 
判断一下，下面的 代码，执行后打印出的结果是 [‘hello’]， 还是 [‘ok’]
答： 是[‘hello’] 。
这行代码让变量var 指向了 列表对象 [‘ok’]
这行代码调用函数，首先让参数变量arg也指向了 列表对象 [‘ok’]
后面函数里面执行
列表对象因为这行代码 发生了改变。
注意：是变量 arg 指向的列表对象 本身改变了，不是变量 arg  指向关系 发生改变。
所以  外面的 全局变量 var也指向这个列表对象， 列表对象本身改变，自然var 对应的值 也改变了。

判断一下，下面的 代码，执行后打印出的结果是 [‘hello’]， 还是 [‘ok’]
答： 是[‘ok’] 。
这行代码让变量var 指向了 列表对象 [‘ok’]
这行代码调用函数，首先让参数变量arg也指向了 列表对象 [‘ok’]
后面函数里面执行
让参数变量arg指向关系发生了改变，它指向了 另一个 列表对象 [‘hello’]
但是，这不会改变 var指向的对象， var还是指向 列表对象 [‘ok’]
所以调用完后， print(var) 的结果，还是  [‘ok’]
>>>Python练习：判断语句

请大家实现一个程序， 对人的健康状况进行评估。
该程序运行起来先询问用户
用户输入身高（比如1.8）后，再询问用户
用户输入体重（比如70）后，再询问用户
用户输入年龄（比如30）后，进行如下判断：
如果用户 年龄 < 10 岁， 显示：10岁以下儿童不参与健康评估
如果用户 年龄 >=10 岁 并且 < 60 岁：
如果 体重 除以 身高的2次方 > 24 就提示用户体重超重
如果 体重 除以 身高的2次方 < 18 就提示用户体重超轻
否则，就提示用户 体重正常
如果用户 年龄 >= 60 岁， 显示：60岁以上老人不参与健康评估
答案与解析
运行下面的代码，会打印出 ‘f2’ 吗？ 为什么？
请大家点击此处链接，观看讲解视频
下面的表达式，运行结果分别是什么
请大家点击此处链接，观看讲解视频
VIP小班学员请联系老师获取补充练习，并做阶段学习交流
扫码分享给朋友，一起学更有动力哦
这是个 判断条件  有多种分支的 程序
>>答案与解析
请大家实现一个程序， 对人的健康状况进行评估。
该程序运行起来先询问用户
用户输入身高（比如1.8）后，再询问用户
用户输入体重（比如70）后，再询问用户
用户输入年龄（比如30）后，进行如下判断：
如果用户 年龄 < 10 岁， 显示：10岁以下儿童不参与健康评估
如果用户 年龄 >=10 岁 并且 < 60 岁：
如果 体重 除以 身高的2次方 > 24 就提示用户体重超重
如果 体重 除以 身高的2次方 < 18 就提示用户体重超轻
否则，就提示用户 体重正常
如果用户 年龄 >= 60 岁， 显示：60岁以上老人不参与健康评估
答案与解析
运行下面的代码，会打印出 ‘f2’ 吗？ 为什么？
请大家点击此处链接，观看讲解视频
下面的表达式，运行结果分别是什么
请大家点击此处链接，观看讲解视频
VIP小班学员请联系老师获取补充练习，并做阶段学习交流
扫码分享给朋友，一起学更有动力哦
这是个 判断条件  有多种分支的 程序
>>>Python练习：对象的方法

有如下的代码，定义了一个Python列表 变量
请接下来写一行代码,在列表的结尾处添加一个元素 字符串 ‘你好’
答案与解析
有如下的代码，定义了一个Python列表 变量
请接下来写一行代码,在列表的开头处添加一个元素: 字符串 ‘你好’
答案与解析
有如下的代码，定义了一个Python列表 变量
请接下来写一行代码,在列表33这个元素的后面 添加一个元素 字符串 ‘你好’
答案与解析
有如下的代码，定义了一个Python字符串
请接下来写一行代码，不要数人名字的下标位置，而是使用字符串find方法 
找到人名字的下标位置，打印出 str1里面的人名字。
答案与解析
请大家点击此处链接，观看讲解视频
有如下的代码，定义了一个Python字符串
请接下来写一行代码，不要数人名字的下标位置，而是使用字符串split方法，打印出 str1里面的人名字。
答案与解析
请大家点击此处链接，观看讲解视频
请写一个程序：
首先提示用户输入年龄、身高、体重信息，格式如下如下
注意：
用户输入的内容，前后、中间都可能有空格，比如  175  厘米
然后根据如下的计算公式，计算出身高对应的标准体重。
如果体重在标准体重上下5公斤，都属于标准体重，提示用户体重标准。
否则提示用户高于标准还是低于标准
答案与解析
请大家点击此处链接，观看讲解视频
请写一个函数，该函数 参数为一个字符串，请验证该字符串是否是一个合法的email地址，合法返回True，否则返回False
规则如下
比如 ：
validate_email(“@gmail.com”) 返回结果应该是 False
validate_email(“hello.gmail@com”) 返回结果应该是 False
validate_email(“hello.gmail@.com”) 返回结果应该是 False
VIP 学员请将本题答案发给老师，老师通过本题的完成情况评估学习效果。
点击这里，观看 白月黑羽老师 和 VIP小班学员 1对1讲解本题
VIP小班学员请联系老师获取补充练习，并做阶段学习交流
扫码分享给朋友，一起学更有动力哦
有如下的代码，定义了一个Python列表 变量
请接下来写一行代码,在列表的结尾处添加一个元素 字符串 ‘你好’
列表后面添加元素当然是用append方法
所以，可以这样
有如下的代码，定义了一个Python列表 变量
请接下来写一行代码,在列表的开头处添加一个元素: 字符串 ‘你好’
列表前面添加元素可以用insert方法
有如下的代码，定义了一个Python列表 变量
请接下来写一行代码,在列表33这个元素的后面 添加一个元素 字符串 ‘你好’
列表中间位置添加元素可以用insert方法，33后面的位置就是 索引为1的位置，所以
有如下的代码，定义了一个Python字符串
请接下来写一行代码，不要数人名字的下标位置，而是使用字符串find方法 
找到人名字的下标位置，打印出 str1里面的人名字。
发现名字前面有冒号：
我们可以使用find方法查找冒号的位置。
这个表达式返回的就是冒号在str1字符串的下标位置，不需要我们辛苦的去数下标位置。
注意：冒号是中文冒号，不是英文冒号
我们要的人名部分就在冒号的后面，所以需要 下标加1 ，
完整代码如下：
有如下的代码，定义了一个Python字符串
请接下来写一行代码，不要数人名字的下标位置，而是使用字符串split方法，打印出 str1里面的人名字。
发现名字前面有冒号：
我们可以使用字符串split将冒号前后的字符串切成两个子字符串，存在列表对象中。
这个表达式返回的就是一个列表，里面包含了冒号前后的两个子字符串。
内容是这样的
显然我们要的人名部分就在列表的第二个元素 ，表达式可以这样写
也可以这样写
完整代码如下：
split方法 经常用来 从 字符串中扣取出某个数据，大家要学会多用它
>>答案与解析
有如下的代码，定义了一个Python列表 变量
请接下来写一行代码,在列表的结尾处添加一个元素 字符串 ‘你好’
答案与解析
有如下的代码，定义了一个Python列表 变量
请接下来写一行代码,在列表的开头处添加一个元素: 字符串 ‘你好’
答案与解析
有如下的代码，定义了一个Python列表 变量
请接下来写一行代码,在列表33这个元素的后面 添加一个元素 字符串 ‘你好’
答案与解析
有如下的代码，定义了一个Python字符串
请接下来写一行代码，不要数人名字的下标位置，而是使用字符串find方法 
找到人名字的下标位置，打印出 str1里面的人名字。
答案与解析
请大家点击此处链接，观看讲解视频
有如下的代码，定义了一个Python字符串
请接下来写一行代码，不要数人名字的下标位置，而是使用字符串split方法，打印出 str1里面的人名字。
答案与解析
请大家点击此处链接，观看讲解视频
请写一个程序：
首先提示用户输入年龄、身高、体重信息，格式如下如下
注意：
用户输入的内容，前后、中间都可能有空格，比如  175  厘米
然后根据如下的计算公式，计算出身高对应的标准体重。
如果体重在标准体重上下5公斤，都属于标准体重，提示用户体重标准。
否则提示用户高于标准还是低于标准
答案与解析
请大家点击此处链接，观看讲解视频
请写一个函数，该函数 参数为一个字符串，请验证该字符串是否是一个合法的email地址，合法返回True，否则返回False
规则如下
比如 ：
validate_email(“@gmail.com”) 返回结果应该是 False
validate_email(“hello.gmail@com”) 返回结果应该是 False
validate_email(“hello.gmail@.com”) 返回结果应该是 False
VIP 学员请将本题答案发给老师，老师通过本题的完成情况评估学习效果。
点击这里，观看 白月黑羽老师 和 VIP小班学员 1对1讲解本题
VIP小班学员请联系老师获取补充练习，并做阶段学习交流
扫码分享给朋友，一起学更有动力哦
有如下的代码，定义了一个Python列表 变量
请接下来写一行代码,在列表的结尾处添加一个元素 字符串 ‘你好’
列表后面添加元素当然是用append方法
所以，可以这样
有如下的代码，定义了一个Python列表 变量
请接下来写一行代码,在列表的开头处添加一个元素: 字符串 ‘你好’
列表前面添加元素可以用insert方法
有如下的代码，定义了一个Python列表 变量
请接下来写一行代码,在列表33这个元素的后面 添加一个元素 字符串 ‘你好’
列表中间位置添加元素可以用insert方法，33后面的位置就是 索引为1的位置，所以
有如下的代码，定义了一个Python字符串
请接下来写一行代码，不要数人名字的下标位置，而是使用字符串find方法 
找到人名字的下标位置，打印出 str1里面的人名字。
发现名字前面有冒号：
我们可以使用find方法查找冒号的位置。
这个表达式返回的就是冒号在str1字符串的下标位置，不需要我们辛苦的去数下标位置。
注意：冒号是中文冒号，不是英文冒号
我们要的人名部分就在冒号的后面，所以需要 下标加1 ，
完整代码如下：
有如下的代码，定义了一个Python字符串
请接下来写一行代码，不要数人名字的下标位置，而是使用字符串split方法，打印出 str1里面的人名字。
发现名字前面有冒号：
我们可以使用字符串split将冒号前后的字符串切成两个子字符串，存在列表对象中。
这个表达式返回的就是一个列表，里面包含了冒号前后的两个子字符串。
内容是这样的
显然我们要的人名部分就在列表的第二个元素 ，表达式可以这样写
也可以这样写
完整代码如下：
split方法 经常用来 从 字符串中扣取出某个数据，大家要学会多用它
>>>Python练习：字符串格式化

有如下的代码，
请接下来写一行代码，用字符串格式化的方式 将 str1 和 str2 拼接成一个字符串。
答案与解析
请写一段代码，运行的时候，提示用户 输入你的名字
在用户输入名字后，再提示用户 输入你的年龄
在用户输入后，显示
其中xxxx是刚才用户输入的名字
yy是刚才用户输入的年龄
答案与解析
下面的 列表中保存了 游戏系统里面的 用户信息
每个元素也是一个列表， 对应一个用户的信息。
其中， 元素1 是用户的姓名， 元素2 是用户的积分，元素3是用户的等级，元素4是用户的头衔。
请写代码 根据上面的列表，以下面的格式打印用户的信息到屏幕上。
注意，使用适当的格式化方式， 使输出像上面那样对齐
答案与解析
请大家点击此处链接，观看讲解视频
扫码分享给朋友，一起学更有动力哦
对于这样的两个字符串
拼接有很多种方法
可以像这样，使用加号
也可以使用格式化的方式
像这样
还可以这样格式化
如果使用的Python解释器是3.6以后的版本，可以这样
这是一个典型的字符串格式化的例子
完整代码如下：
>>答案与解析
有如下的代码，
请接下来写一行代码，用字符串格式化的方式 将 str1 和 str2 拼接成一个字符串。
答案与解析
请写一段代码，运行的时候，提示用户 输入你的名字
在用户输入名字后，再提示用户 输入你的年龄
在用户输入后，显示
其中xxxx是刚才用户输入的名字
yy是刚才用户输入的年龄
答案与解析
下面的 列表中保存了 游戏系统里面的 用户信息
每个元素也是一个列表， 对应一个用户的信息。
其中， 元素1 是用户的姓名， 元素2 是用户的积分，元素3是用户的等级，元素4是用户的头衔。
请写代码 根据上面的列表，以下面的格式打印用户的信息到屏幕上。
注意，使用适当的格式化方式， 使输出像上面那样对齐
答案与解析
请大家点击此处链接，观看讲解视频
扫码分享给朋友，一起学更有动力哦
对于这样的两个字符串
拼接有很多种方法
可以像这样，使用加号
也可以使用格式化的方式
像这样
还可以这样格式化
如果使用的Python解释器是3.6以后的版本，可以这样
这是一个典型的字符串格式化的例子
完整代码如下：
>>>Python练习：循环

有如下的2个字符串
请写一个程序
找出 str1 中所有 str2 中不存在的人名，并且
找出 str2 中所有 str1 中不存在的人名
答案与解析
请大家点击此处链接，观看讲解视频
请大家点击此处链接，观看讲解视频
有如下的字符串，记录了三国人物的名字和年龄
请写一个程序将其中 30岁以上和以下的人分别打印出来，类似这样
答案与解析
请大家点击此处链接，观看讲解视频
关羽 和张飞 正在玩 剪刀石头布 的游戏。
写一个函数calculate_score， 参数是列表， 里面包含了n个元素也是列表。
比如 像这样 [[“剪刀”, “石头”], [“布”, “剪刀”], [“剪刀”, “剪刀”]]
n 个元素代表 n局 比赛，用列表表示，比如 [“剪刀”, “石头”]
其中第1个元素表示关羽打出的手势，第2个元素是张飞打出的手势。
函数要计算出谁赢得次数多，输出比赛结果。
如果他们打成平手，输出“平局”。
比如：
答案与解析
和VIP学员甲讲解本题，当你毫无思路时，如何用伪代码理清思路
和VIP学员乙讲解本题的开发思路，他已经可以开发出一部分代码，但是关键点卡住了
VIP小班学员请联系老师获取补充练习，并做阶段学习交流
扫码分享给朋友，一起学更有动力哦
>>答案与解析
有如下的2个字符串
请写一个程序
找出 str1 中所有 str2 中不存在的人名，并且
找出 str2 中所有 str1 中不存在的人名
答案与解析
请大家点击此处链接，观看讲解视频
请大家点击此处链接，观看讲解视频
有如下的字符串，记录了三国人物的名字和年龄
请写一个程序将其中 30岁以上和以下的人分别打印出来，类似这样
答案与解析
请大家点击此处链接，观看讲解视频
关羽 和张飞 正在玩 剪刀石头布 的游戏。
写一个函数calculate_score， 参数是列表， 里面包含了n个元素也是列表。
比如 像这样 [[“剪刀”, “石头”], [“布”, “剪刀”], [“剪刀”, “剪刀”]]
n 个元素代表 n局 比赛，用列表表示，比如 [“剪刀”, “石头”]
其中第1个元素表示关羽打出的手势，第2个元素是张飞打出的手势。
函数要计算出谁赢得次数多，输出比赛结果。
如果他们打成平手，输出“平局”。
比如：
答案与解析
和VIP学员甲讲解本题，当你毫无思路时，如何用伪代码理清思路
和VIP学员乙讲解本题的开发思路，他已经可以开发出一部分代码，但是关键点卡住了
VIP小班学员请联系老师获取补充练习，并做阶段学习交流
扫码分享给朋友，一起学更有动力哦
>>>Python练习：文件读写

鼠标右键点击这里，弹出菜单中，选择 链接另存为，下载文件 0013_a1.txt 到本机上。
该文件的内容编码方式是utf8。
该文件中记录了小区中人的姓名和年龄
请编写一个程序，将其中年龄大于50岁的找出来， 并且以这样的格式追加到该文件末尾中。
答案与解析
请大家点击此处链接，观看讲解视频
扫码分享给朋友，一起学更有动力哦
你们公司有一批图片文件，不小心被管理人员把扩展名都去掉了。
这批图片文件中有的是png文件，有的是jpg文件。
png文件的开头一定是 这样的  89  50  4e  47  0d  0a  1a  0a  8个字节
现在要求你写一个函数，参数是图片文件的路径，函数根据文件的开头8个字节的信息，判断该文件是不是png文件。
如果是，打印出 png， 否则打印出 jpg。
小班学员请联系老师获取答案视频讲解
小班学员请联系老师获取补充练习，并做阶段学习交流
>>答案与解析
鼠标右键点击这里，弹出菜单中，选择 链接另存为，下载文件 0013_a1.txt 到本机上。
该文件的内容编码方式是utf8。
该文件中记录了小区中人的姓名和年龄
请编写一个程序，将其中年龄大于50岁的找出来， 并且以这样的格式追加到该文件末尾中。
答案与解析
请大家点击此处链接，观看讲解视频
扫码分享给朋友，一起学更有动力哦
你们公司有一批图片文件，不小心被管理人员把扩展名都去掉了。
这批图片文件中有的是png文件，有的是jpg文件。
png文件的开头一定是 这样的  89  50  4e  47  0d  0a  1a  0a  8个字节
现在要求你写一个函数，参数是图片文件的路径，函数根据文件的开头8个字节的信息，判断该文件是不是png文件。
如果是，打印出 png， 否则打印出 jpg。
小班学员请联系老师获取答案视频讲解
小班学员请联系老师获取补充练习，并做阶段学习交流
>>>Python练习：使用库

请大家使用 pip install requests 命令安装好 requests 库。
该库可以用来构建http请求发送给服务器，并获取响应消息。 经常用于测试服务端和一些自动化工作。
使用文档可以参考：http://cn.python-requests.org/zh_CN/latest/

新浪提供了股票数据 web API服务， 可以 得到指定股票的最新行情
url为   http://hq.sinajs.cn/list=<股票代码>
以大秦铁路（股票代码：sh601006）为例，如果要获取它的最新行情，只需访问新浪的接口：
http://hq.sinajs.cn/list=sh601006
这个url会返回一串文本，例如：
这个字符串由许多数据拼接在一起，不同含义的数据用逗号隔开了，按照程序员的思路，顺序号从0开始。
后面的字段我们就不需要了
请大家写一个程序，该程序实现一个函数 getStockPrice ，利用 requests库, 获取 指定某只股票的今日开盘价格。该函数的参数为指定股票的代码。
答案与解析
请大家点击此处链接，观看讲解视频
鼠标右键点击这里，弹出菜单中，选择 链接另存为，下载模块文件 getissue.py 到本机上。
这个文件里面有一个函数 getIssueBody。 可以将我们论坛上指定某个帖子的主体内容返回回来。
其参数是帖子的ID。
请大家编写一个程序使用该函数，分别返回ID 为 1 和 2 的两个帖子的内容。
要求大家编写程序的代码文件 （比如main.py）和  getissue.py 分别放在不同的目录下面。
大家可以通过 设置环境变量 PYTHONPATH,  或者直接修改 sys.path 的方式， 让解释器可以寻找到 getissue.py 这个模块文件。
答案与解析
请大家点击此处链接，观看讲解视频
扫码分享给朋友，一起学更有动力哦
假设我们下载 模块 getissue.py 文件存储路径为 d:\libs\getissue.py
而我们编写的调用该函数的代码文件路径为 e:\main.py, 其内容为
那么我们运行的时候 在进入命令行的时候，输入命令
set PYTHONPATH=d:\libs
设置环境变量，这样解释器启动后， d:\libs 这个路径就会被加到 sys.path中， 当执行 import xxx 模块的时候，就会把这个路径作为模块搜索的路径之一。
如下所示
>>答案与解析
请大家使用 pip install requests 命令安装好 requests 库。
该库可以用来构建http请求发送给服务器，并获取响应消息。 经常用于测试服务端和一些自动化工作。
使用文档可以参考：http://cn.python-requests.org/zh_CN/latest/

新浪提供了股票数据 web API服务， 可以 得到指定股票的最新行情
url为   http://hq.sinajs.cn/list=<股票代码>
以大秦铁路（股票代码：sh601006）为例，如果要获取它的最新行情，只需访问新浪的接口：
http://hq.sinajs.cn/list=sh601006
这个url会返回一串文本，例如：
这个字符串由许多数据拼接在一起，不同含义的数据用逗号隔开了，按照程序员的思路，顺序号从0开始。
后面的字段我们就不需要了
请大家写一个程序，该程序实现一个函数 getStockPrice ，利用 requests库, 获取 指定某只股票的今日开盘价格。该函数的参数为指定股票的代码。
答案与解析
请大家点击此处链接，观看讲解视频
鼠标右键点击这里，弹出菜单中，选择 链接另存为，下载模块文件 getissue.py 到本机上。
这个文件里面有一个函数 getIssueBody。 可以将我们论坛上指定某个帖子的主体内容返回回来。
其参数是帖子的ID。
请大家编写一个程序使用该函数，分别返回ID 为 1 和 2 的两个帖子的内容。
要求大家编写程序的代码文件 （比如main.py）和  getissue.py 分别放在不同的目录下面。
大家可以通过 设置环境变量 PYTHONPATH,  或者直接修改 sys.path 的方式， 让解释器可以寻找到 getissue.py 这个模块文件。
答案与解析
请大家点击此处链接，观看讲解视频
扫码分享给朋友，一起学更有动力哦
假设我们下载 模块 getissue.py 文件存储路径为 d:\libs\getissue.py
而我们编写的调用该函数的代码文件路径为 e:\main.py, 其内容为
那么我们运行的时候 在进入命令行的时候，输入命令
set PYTHONPATH=d:\libs
设置环境变量，这样解释器启动后， d:\libs 这个路径就会被加到 sys.path中， 当执行 import xxx 模块的时候，就会把这个路径作为模块搜索的路径之一。
如下所示
>>>Python练习：调试程序

鼠标右键点击这里，弹出菜单中，选择 链接另存为，下载数据文件 0016_1.txt 到本机上。
这个是一个数据文件，格式如下
这里面有3列数据，分别 保存了 游戏系统的用户名， 用户积分 ， 年龄
现在要求大家写一个程序，打印出该数据文件中积分最多的用户姓名。
大家使用教程里面推荐的 Pycharm 集成开发环境，创建一个项目文件，并写相应的代码。
在开发过程中，发现问题，可以使用我们教程推荐的 调试程序的方法进行调试，发现问题根源，并解决问题。
答案与解析
请大家点击此处链接，观看讲解视频
扫码分享给朋友，一起学更有动力哦
>>答案与解析
鼠标右键点击这里，弹出菜单中，选择 链接另存为，下载数据文件 0016_1.txt 到本机上。
这个是一个数据文件，格式如下
这里面有3列数据，分别 保存了 游戏系统的用户名， 用户积分 ， 年龄
现在要求大家写一个程序，打印出该数据文件中积分最多的用户姓名。
大家使用教程里面推荐的 Pycharm 集成开发环境，创建一个项目文件，并写相应的代码。
在开发过程中，发现问题，可以使用我们教程推荐的 调试程序的方法进行调试，发现问题根源，并解决问题。
答案与解析
请大家点击此处链接，观看讲解视频
扫码分享给朋友，一起学更有动力哦
>>>Python练习：字典

鼠标右键点击这里，弹出菜单中，选择 链接另存为，下载数据文件 0016_1.txt 到本机上。
这个是一个数据文件，格式如下
这里面有3列数据，分别 保存了 游戏系统的用户名， 用户积分 ， 年龄
现在要求大家写一个程序，计算出同一姓氏的人的积分总和。
输出结果格式如下：
答案与解析
请大家点击此处链接，观看讲解视频
VIP小班学员请联系老师获取补充练习，并做阶段学习交流
扫码分享给朋友，一起学更有动力哦
>>答案与解析
鼠标右键点击这里，弹出菜单中，选择 链接另存为，下载数据文件 0016_1.txt 到本机上。
这个是一个数据文件，格式如下
这里面有3列数据，分别 保存了 游戏系统的用户名， 用户积分 ， 年龄
现在要求大家写一个程序，计算出同一姓氏的人的积分总和。
输出结果格式如下：
答案与解析
请大家点击此处链接，观看讲解视频
VIP小班学员请联系老师获取补充练习，并做阶段学习交流
扫码分享给朋友，一起学更有动力哦
>>>Python练习：异常

鼠标右键点击这里，弹出菜单中，选择 链接另存为，下载数据文件 0019.txt 到本机上。
这个是一个数据文件，格式如下
请大家写一个程序，依次打印出里面的每一行内容的字符串长度。
注意： 这个文件应该是UTF8编码的格式，但是，由于历史原因，可能里面有些字符不是UTF8编码。
要求大家再解码每行内容的时候，如果UTF8解码错误，捕获该类型的错误，打印出 错误编码在文件中的行数，并且能够继续进行后续行的处理。
最后输出结果格式如下
答案与解析
请大家点击此处链接，观看讲解视频
扫码分享给朋友，一起学更有动力哦
>>答案与解析
鼠标右键点击这里，弹出菜单中，选择 链接另存为，下载数据文件 0019.txt 到本机上。
这个是一个数据文件，格式如下
请大家写一个程序，依次打印出里面的每一行内容的字符串长度。
注意： 这个文件应该是UTF8编码的格式，但是，由于历史原因，可能里面有些字符不是UTF8编码。
要求大家再解码每行内容的时候，如果UTF8解码错误，捕获该类型的错误，打印出 错误编码在文件中的行数，并且能够继续进行后续行的处理。
最后输出结果格式如下
答案与解析
请大家点击此处链接，观看讲解视频
扫码分享给朋友，一起学更有动力哦
>>>Python练习：可变参数

请写一个函数 equals ，该函数参数为任意数量的数字，请在函数中统计出这些参数数字中重复的数字有多少个
比如 ：
输出为：
答案与解析
扫码分享给朋友，一起学更有动力哦
>>答案与解析
请写一个函数 equals ，该函数参数为任意数量的数字，请在函数中统计出这些参数数字中重复的数字有多少个
比如 ：
输出为：
答案与解析
扫码分享给朋友，一起学更有动力哦
>>>Python练习：目录和文件操作

点击这里 下载一个zip包，解压后，得到一个目录source。
请写一个程序，在当前工作目录下，创建 如下的目录层级结构
backup/new/
然后把整个下载的source目录 内容，拷贝到 backup/new/source 目录里面去。
请写一个程序，计算出 下载的source目录里面（不包含子目录）所有的文件的大小之和
请写一个程序，删除掉 下载的source目录里面（不包含子目录）所有的扩展名为bmp的文件
请写一个程序，找出下载的source目录里面（不包含子目录）所有扩展名为.avi的文件，扩展名改为.dll
请写一个程序，找出下载的source目录里面（包含子目录）所有扩展名为.avi的文件，扩展名改为.dll
VIP小班学员请联系老师获取补充练习，并做阶段学习交流
扫码分享给朋友，一起学更有动力哦
>>答案与解析
点击这里 下载一个zip包，解压后，得到一个目录source。
请写一个程序，在当前工作目录下，创建 如下的目录层级结构
backup/new/
然后把整个下载的source目录 内容，拷贝到 backup/new/source 目录里面去。
请写一个程序，计算出 下载的source目录里面（不包含子目录）所有的文件的大小之和
请写一个程序，删除掉 下载的source目录里面（不包含子目录）所有的扩展名为bmp的文件
请写一个程序，找出下载的source目录里面（不包含子目录）所有扩展名为.avi的文件，扩展名改为.dll
请写一个程序，找出下载的source目录里面（包含子目录）所有扩展名为.avi的文件，扩展名改为.dll
VIP小班学员请联系老师获取补充练习，并做阶段学习交流
扫码分享给朋友，一起学更有动力哦
>>>Python练习：日期和时间操作

请写一个程序，打印出从当天开始，在一年内，所有的周日对应的日期
点击这里 下载一个日志文件 esn.log
该文件记录了购物平台的购物记录，文件格式如下
其中 每行 尖括号之前为数字时间戳，表示记录该行信息的时间，也就是用户购物的时间。
请写一个程序，分析该日志文件，得出一张表，记录每一天合计的购物次数，输出格式如下：
答案与解析
扫码分享给朋友，一起学更有动力哦
>>答案与解析
请写一个程序，打印出从当天开始，在一年内，所有的周日对应的日期
点击这里 下载一个日志文件 esn.log
该文件记录了购物平台的购物记录，文件格式如下
其中 每行 尖括号之前为数字时间戳，表示记录该行信息的时间，也就是用户购物的时间。
请写一个程序，分析该日志文件，得出一张表，记录每一天合计的购物次数，输出格式如下：
答案与解析
扫码分享给朋友，一起学更有动力哦
>>>Python练习：调用其它程序

请百度搜索并安装文本编辑器notepad++。
并且写一个Python程序，实现：
用命令行启动 notepad++ 编辑器打开当前的代码文件。
过10秒后用Windows下的命令 tasklist 找到该notepad++进程，并获取其进程ID
根据 其进程ID 使用命令 taskkill 杀死notepad++进程。
如何使用这两个命令可以参考该文章 http://tweaks.com/windows/39559/kill-processes-from-command-prompt/
答案与解析
扫码分享给朋友，一起学更有动力哦
>>答案与解析
请百度搜索并安装文本编辑器notepad++。
并且写一个Python程序，实现：
用命令行启动 notepad++ 编辑器打开当前的代码文件。
过10秒后用Windows下的命令 tasklist 找到该notepad++进程，并获取其进程ID
根据 其进程ID 使用命令 taskkill 杀死notepad++进程。
如何使用这两个命令可以参考该文章 http://tweaks.com/windows/39559/kill-processes-from-command-prompt/
答案与解析
扫码分享给朋友，一起学更有动力哦
>>>Python练习：多线程

Windows上的wget可以点击这里 下载。 这个程序不用安装，直接在命令行里使用即可
请写一个Python程序，实现：
命令行提示用户输入要下载文件的url
对于每个下载任务，新建一个线程去执行下载
答案与解析
扫码分享给朋友，一起学更有动力哦
>>答案与解析
Windows上的wget可以点击这里 下载。 这个程序不用安装，直接在命令行里使用即可
请写一个Python程序，实现：
命令行提示用户输入要下载文件的url
对于每个下载任务，新建一个线程去执行下载
答案与解析
扫码分享给朋友，一起学更有动力哦
>>>Python练习：requests和json

请大家使用 pip install requests 命令安装好 requests 库。
使用文档可以参考：http://cn.python-requests.org/zh_CN/latest/

github 提供了 REST API 接口，可以获取我们论坛上某个帖子里面所有跟帖的信息。
比如，我们要获取 论坛ID 为1 的帖子所有跟帖的信息，只需要访问
https://api.github.com/repos/baiyueheiyu/python3vip-forum/issues/1/comments
返回的响应消息体是json格式的字符串，如下所示
这是一个json数组， 其中每个元素对应一个跟帖的信息。 记录的信息包括了：谁发言的， 发言内容是什么等等。 如上图中红圈部分所示。
请求大家写一个程序， 把跟帖中所有 白月黑羽发言的信息 抓取出来 写到一个文件中。
最后调用notepad++ 打开该文件
答案与解析
扫码分享给朋友，一起学更有动力哦
>>答案与解析
请大家使用 pip install requests 命令安装好 requests 库。
使用文档可以参考：http://cn.python-requests.org/zh_CN/latest/

github 提供了 REST API 接口，可以获取我们论坛上某个帖子里面所有跟帖的信息。
比如，我们要获取 论坛ID 为1 的帖子所有跟帖的信息，只需要访问
https://api.github.com/repos/baiyueheiyu/python3vip-forum/issues/1/comments
返回的响应消息体是json格式的字符串，如下所示
这是一个json数组， 其中每个元素对应一个跟帖的信息。 记录的信息包括了：谁发言的， 发言内容是什么等等。 如上图中红圈部分所示。
请求大家写一个程序， 把跟帖中所有 白月黑羽发言的信息 抓取出来 写到一个文件中。
最后调用notepad++ 打开该文件
答案与解析
扫码分享给朋友，一起学更有动力哦
>>>Python练习：正则表达式

这个网址 http://www.listeningexpress.com/studioclassroom/ad/
包含了优质的英语学习音频文件。
这些音频文件 在网页的html文件内容都是以mp3结尾的，如下图所示：

要求大家使用Requests库获取这个网页html文本内容，并且使用正则表达式获取里面所有的mp3文件的网址，并且调用外部程序wget依次下载下来。
Windows上的wget可以点击这里 下载。 这个程序不用安装，直接在命令行里使用即可
注意：
获取的音频网址前面需要加上 前缀  http://www.listeningexpress.com/studioclassroom/ad/  才是完整的下载地址
MP3文件中有空格字符，组成下载网址时，需要进行url编码，否则空格会被当成命令行分隔符。参考代码如下所示
答案与解析
请大家点击此处链接，观看讲解视频
请大家点击此处链接，观看讲解视频
VIP小班学员请联系老师获取补充练习，并做阶段学习交流
扫码分享给朋友，一起学更有动力哦
>>答案与解析
这个网址 http://www.listeningexpress.com/studioclassroom/ad/
包含了优质的英语学习音频文件。
这些音频文件 在网页的html文件内容都是以mp3结尾的，如下图所示：

要求大家使用Requests库获取这个网页html文本内容，并且使用正则表达式获取里面所有的mp3文件的网址，并且调用外部程序wget依次下载下来。
Windows上的wget可以点击这里 下载。 这个程序不用安装，直接在命令行里使用即可
注意：
获取的音频网址前面需要加上 前缀  http://www.listeningexpress.com/studioclassroom/ad/  才是完整的下载地址
MP3文件中有空格字符，组成下载网址时，需要进行url编码，否则空格会被当成命令行分隔符。参考代码如下所示
答案与解析
请大家点击此处链接，观看讲解视频
请大家点击此处链接，观看讲解视频
VIP小班学员请联系老师获取补充练习，并做阶段学习交流
扫码分享给朋友，一起学更有动力哦
>>>Python练习：装饰器

某公司要开发一个 系统， 这个系统运行的时候， 用户输入指令，比如，查询价格，就由相应的查询价格的业务代码去处理。
假设你是系统架构师， 你确定了如下的代码文件结构
Python库模块文件名为 lib.py
里面包含一个装饰器函数 cmd_dispatch, 这个装饰器函数是给 开发业务工程师使用的。
业务代码放在svc.py文件中
在这个代码文件中，开发业务代码的工程师，可以像下面这样使用你的装饰器 cmd_dispatch
装饰器参数是 用户指令字符串，
比如，上面的写法就表示，如果用户输入指令  查询价格 ， 系统就会调用  queryPrice, 用户输入  退货 ， 系统就会调用  refund。
启动代码文件是run.py。
我们运行这个run.py 就启动了整个系统。
代码如下
请你写出 lib.py这个库， 完成上述的功能，包括装饰器函数 和 cmd_route_table。
扫码分享给朋友，一起学更有动力哦
点击这里查看和vip学员的讲解视频
>>答案与解析
某公司要开发一个 系统， 这个系统运行的时候， 用户输入指令，比如，查询价格，就由相应的查询价格的业务代码去处理。
假设你是系统架构师， 你确定了如下的代码文件结构
Python库模块文件名为 lib.py
里面包含一个装饰器函数 cmd_dispatch, 这个装饰器函数是给 开发业务工程师使用的。
业务代码放在svc.py文件中
在这个代码文件中，开发业务代码的工程师，可以像下面这样使用你的装饰器 cmd_dispatch
装饰器参数是 用户指令字符串，
比如，上面的写法就表示，如果用户输入指令  查询价格 ， 系统就会调用  queryPrice, 用户输入  退货 ， 系统就会调用  refund。
启动代码文件是run.py。
我们运行这个run.py 就启动了整个系统。
代码如下
请你写出 lib.py这个库， 完成上述的功能，包括装饰器函数 和 cmd_route_table。
扫码分享给朋友，一起学更有动力哦
点击这里查看和vip学员的讲解视频
