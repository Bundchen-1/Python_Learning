----------------------- Page 1-----------------------

School-Enterprise Cooperation on Python Data
Analysis Teaching
Xinxin Liu
School of Computer Science and Engineering
South China University of Technology
Guangzhou, China, 510640
Email: csliuxx@scut.edu.cn
Hongyun Xu
School of Computer Science and Engineering
South China University of Technology
Guangzhou, China, 510640
Email: hongyun@scut.edu.cn
Abstract—To meet the needs of enterprises for data analysis
talents, school-enterprise cooperative course Python Data Analysis introduces the basic theories and methods for data analysis
by using Python programming language. The teaching content
is organized around practical cases designed according to the
actual demand of the enterprise. Exploratory teaching method
is conducted to cultivate the communication, collaboration, critical thinking and creativity ability of students. Students fully
participate in the teaching process by discussing, analyzing and
programming the cases. The implementation scheme, organization of exploratory teaching and the design of teaching cases are
introduced in this paper.
Index Terms—School-enterprise cooperation, Python, data
analysis, exploratory teaching
I. INTRODUCTION
Python Data Analysis is a school-enterprise cooperative
course supported by the Ministry of Education of China.
School-enterprise cooperation program aims to deepen integration between industry and education by building the courses
that meet the needs of enterprises. With the development of
mobile Internet, Internet of Things and artificial intelligence,
more and more disciplines are on the basis of computation,
such as computational physics, computational chemistry, and
computational biology and so on. Data analysis technique,
that is to discover useful information, suggest conclusions,
and support decision-making, has become a basic supporting
technique of computation.
Python Data Analysis course introduces the basic theories
and methods for data acquisition, processing, modeling and
analysis by using Python programming language. This course
is suitable for anyone who wants to perform data analysis.
Python is a concise and efficient programming language
preferred as the entry language for programming. Python
provides a rich third-party library for data analysis that enable
learners to focus on problem solving. After learning this
course, students will gain the basic data analysis ability as
well as computational thinking for research and practice in all
scientific fields they engaged in.
Reform are conducted on both the teaching content and
teaching method. The teaching content is organized around
practical cases designed according to the actual demand of
enterprises. Exploratory teaching method is conducted to cultivate the communication, collaboration, critical thinking and
creativity ability of students. Students fully participate in the
teaching process by discussing, analyzing and solving cases.
The rest of this paper is organized as follows. We begin
with the introduction of data analysis courses in universities
in Section 2. The design of teaching cases is proposed in
Section 3, and the implementation scheme and organization of
exploratory teaching are presented in Section 4. We conclude
the paper in Section 5.
II. TEACHING OF DATA ANALYSIS COURSES IN
UNIVERSITIES
In this section, we survey the teaching of data analysis
courses in universities through the massive open online courses
(MOOCs) they provided.
MIT provides two-course sequence: Introduction to Computer Science and Programming Using Python [1], and Introduction to Computational Thinking and Data Science [2].
Together, they are designed to help people with no prior
exposure to computer science or programming learn to think
computationally and write programs to tackle useful problems.
The first one covers the basics of computer programming in
Python and the fundamentals of computation. The second one
emphasizes on data science using Python that introduces computational models, such as optimization models, simulation
models and statistical models for solving problems with data.
Nanjing University provides the course Play with Data in
Python [3] that introduces how to use Python to easily obtain,
represent, analyze and display data. This course starts from the
basic syntax of Python, to how to obtain data on the network
and represent data. Then statistical analysis and visualization
of data are conducted. Finally a simple GUI interface for
representing and processing data are introduced. The cases
of this course are mainly based on the financial data.
Beijing Institute of Technology provides the course Python
Data Analysis and Presentation [4]. This course introduces
how to represent, clean, count, and present data in Python
by using third-party libraries. Topics includes the expression
of n-dimensional data and the basic concept and operation
of scientific calculation based on NumPy, visualizing data
trends and characteristics by Matplotlib and professional data
analysis and processing by Pandas.
978-1-7281-1846-8/19/$31.00 ©2019 IEEE
The 14th International Conference on
Computer Science & Education (ICCSE 2019)
August 19-21, 2019. Toronto, Canada
278
TuesP2.18
----------------------- Page 2-----------------------

Although the teaching content of these courses can be
consulted from MOOCs, for a complete course, the implementation scheme and classroom teaching mode still need
to be formulated according to the actual situation. Driven
by the needs of enterprises, our school-enterprise cooperative
course redesign the teaching content according to the cases
from the actual demand of enterprises. For classroom teaching,
the student-centered teaching is conducted to mobilize the
enthusiasm of students.
III. THE DESIGN OF TEACHING CASES
This course is for anyone with no prior knowledge of
Python and data analysis. Traditional teaching starts from the
definition of Python, including identifiers, data types, operators
and expressions, control statements, functions and so on.
Students get involved in the details of language grammar and
tent to lose interest in programming. This course incorporates
the introduction of Python fundamentals and data analysis
techniques into practical cases. The teacher first puts forward
the case problem, introduces the basic knowledge of Python
involved in solving the problem, and gives part of the solution.
Then, students form their own solutions through discussion
and realize their solutions by programming. During the process
of problem solving, the basics of Python and data analysis
techniques are derived. At the same time, students gain the
ability of computational thinking by using the basic ideas and
methods of computer science to analyze and solve practical
problems.
The organization of the teaching content and cases is on a
weekly basis. The Python fundamentals of data analysis are
introduced from the easy to the difficult and complicated. The
main teaching cases and computational thinking involved are
shown in Table I.
Case 1 rock-paper-scissors game. The two sides of the
game choose one of rock, paper and scissors respectively
to judge the outcome of both sides. Through this case, the
selection method of the structured programming is introduced.
Python syntax involved in this case includes variables, types,
numerical operations, as well as if statement. During the
exploratory teaching, the teacher first gives an incomplete
solution, even with some errors. Students complete the solution by discussion. On this basis, students further program
the human-machine interactive rock-paper-scissors game. The
choice of the machine is randomly generated by the program,
and the user’s choice is inputted from the keyboard. The
program determines the winning or losing of both parties.
After learning this case, students do experiment 1, which is an
updated version of the rock-paper-scissors game called rockpaper-scissors-lizard-spock.
Case 2-1 factorial calculation introduces the loop method of
the structured programming. Python syntax involved includes
function, while statement, and for statement. In case 2-2
calculation of square root , the Guess and Check method
is introduced while the loop method is applied. The square
root of a number is to guess a number first and then judge
whether its square is the given number. During the exploratory
teaching, students try while loop and for loop respectively
to implement the cases, and compare the difference between
them. After class, students do experiment 2 that is to use while
loop and for loop respectively to find the prime numbers within
one hundred.
Case 3-1 Fibonacci sequence and case 3-2 Hanoi tower introduce recursion. Python syntax involved includes string, list,
and recursive function. During the exploratory teaching, the
factorial procedures written in recursion and loop respectively
are given. Students are guided to discover the similarities and
differences between them. Then students are encouraged to
realizes the given cases 3-1 and 3-2 using recursion or loop.
By comparison, merit and shortcoming of recursion and loop
are discussed. After class, students are supposed to write a
recursive procedure to compute the power of a number in
experiment 3-1, and to count the number of vowels in a given
string recursively in experiment 3-2.
Case 4 quick sort introduces the sorting method. The
Python syntax involved includes tuple, dictionary, and list
comprehension. During the exploratory teaching, students first
try to program the quick sort with the Python syntax learned.
Then the teacher introduces the list comprehension of Python.
By comparing the quick sort with list comprehension and
C programming language implementation, the simplicity and
efficiency of Python are showed. After class, students do
experiment 4 that is to choose a sorting method from insertion
sort, bubble sort, selection sort, and merge sort for implementation.
Through the above cases, the basic of Python and programming method are introduced. From case 5, the teaching content
mainly focuses on using Python as a problem solving tool to
practice data analysis.
The decision tree method introduced in case 5 is a common
method to solve the optimal solution problem. It is used to
obtain the optimal result according to the given demand under
the limitation of specific conditions. This method decomposes
a problem into two smaller sub-problems corresponding to
the result of an optimal solution with or without an element.
The exploratory teaching starts with a simpler example that is
given 1 yuan, 2 yuan, 5 yuan, 10 yuan, 25 yuan coin each, is
it possible to constitute a specified amount with them? First,
students try to solve this kind of problem with enumeration
method. Because of the complexity of the problem, students
will find that the enumeration method is not practical. Then the
method of decision tree is introduced. Students further discuss
how to use this method to solve 0-1 knapsack problem. After
class, students complete experiment 5 that is to implement the
0-1 knapsack problem.
Case 6 introduces the Monte Carlo method, a solution to
the uncertainty problem, by taking an example: what is the
probability of rolling n dice to get the specified sum of point
m? Monte Carlo method uses the statistical law of random
numbers to simulate the solution of this problem. Case 7
random walk is another application of Monte Carlo method.
The case is designed as follows: a drunk man walks to east,
south, west, north four directions randomly from his home.
279
TuesP2.18
----------------------- Page 3-----------------------

TABLE I
ORGANIZATION OF THE TEACHING CASES
Week Cases Computational Thinking
Week 1 Case 1: rock-paper-scissors game Selection of structured programming
Week 2 Case 2-1: factorials 1) Repetition of structured programming
Case 2-2: square root 2) Guess and Check method
Week 3 Case 3-1: Fibonacci sequence Recursion
Case 3-2: tower of Hanoi
Week 4 Case 4: quick sort Sorting
Week 5 Case 5: 0-1 knapsack problem Decision trees
Week 6 Case 6: rolling dice Problems of uncertainty
Week 7 Case 7: random walks Monte Carlo method
Week 8 Case 8: hand-drawn effect of the image Python numerical analysis library NumPy
Week 9-10 Case 9: statistical chart drawing Python data visualizing library Matplotlib
Week 11-12 Case 10: trend analysis of housing price Python data analysis library Pandas
and stock data
Assuming that when he leaves home more than 4 kilometers,
he will not be able to walk home and have to take the traffic
tools. The question is: what is the biggest steps of random
walk, the drunk man can walk home with more than fifty
percent probability. Students discuss the solution and take the
result as experiment 6.
Case 8 introduces the expression of n-dimensional data
and the basic concepts and operations of scientific calculation
using Python third-party library NumPy. The basic methods
and functions of NumPy data access are introduced through
an example of hand-drawn image.
Case 9 is based on Python data visualizing third-party
library Matplotlib, which displays the data with specific graphics and images. The method of drawing histogram, scatter
chart, pie chart, and polar coordinate chart are introduced to
intuitively display data trends and characteristics. Matplotlib
library supports hundreds of data visualizing effect. The basic
drawing functions of Matplotlib are introduced through statistical graph drawing examples.
Case 10 is based on Pandas, a powerful third-party library
of Python for professional data analysis and processing. Series
and DataFrame data types for data presentation and usage are
introduced. By analyzing the housing price development trend
and the stock data trend, data feature analysis with Pandas
are shown. The solutions to case 9 and case 10 are taken as
experiment 7 and experiment 8 respectively.
IV. THE IMPLEMENTATION SCHEME AND TEACHING
ORGANIZATION
A. The Implementation Scheme
Python Data Analysis course has 40 periods total, including
24 periods of lecturing and 16 periods of experiment. This
course is arranged to complete in 12 weeks, 2 periods per
week. Each week or two, a teaching case is introduced,
classroom discussion and programming are carried out. In the
16 periods of experiment, students are supposed to complete 8
experimental tasks, 2 sessions for each. The experiment is to
improve and expand the teaching cases on the one hand, and on
the other hand to apply the computational thinking introduced
by the cases to solve new problems. On account that Python
Data Analysis is a highly practical course, at the end of this
course, students are assigned a comprehensive practice project
and must give the project defense.
The course assessment focuses on the whole process of
students’ learning. Diversity assessment forms are adopted,
including the final exam, classroom discussion, experiment
and project defense. The final exam occupies 30% of the
total score, examining students’ mastery of basic knowledge
of data analysis. Classroom discussion occupies 20% of the
total score, examining students’ active learning ability and
exploratory ability. The hands-on ability and problem-solving
ability of the students are investigated through the experiment,
which occupies 30% of the total score. The project defense assesses the ability of comprehensive application and innovation,
occupying 20% of the total score.
B. The Teaching Organization
The teaching of Python Data Analysis is organized as a
hierarchical structure as shown in Figure 1. First, a case is put
forward and the basic knowledge of Python and data analysis
involved in solving the case problem are introduced by the
teacher. Then an incomplete or even wrong solution are given
for discussion. Students design their own solutions to the case
and program to verify their solutions. Through the exploratory
learning and problem solving, computational thinking ability
of students is improved.
The teaching method of flipped classroom is referred in
the exploratory teaching. Before class, the teacher releases the
case for the week, so that students could investigate the needs
and collect relevant materials. In class, students are divided
into groups of six to eight. Three main sessions that is case
280
TuesP2.18
----------------------- Page 4-----------------------

Fig. 1. The Hierarchical Structure of the Teaching Organization
study, discussion and implementation are carried out. In the
classroom teaching, the rain classroom tool developed by Tsinghua University is used in pre-class preparation, classroom
registration, random roll call, and real-time quiz [5] .
The organization of classroom teaching mainly includes
three sessions. Session 1: case study and Python basics. The
teacher introduces the case of the week, explains the basics
of Python and data analysis involved in the implementation of
the case, and then asks questions about the key and difficult
points. With the help of the real-time quiz function of the rain
classroom tool, correct rate of students can be checked in real
time to give feedback to the teacher. Session 2: discussion.
The students in groups discuss their solution to the case.
One or two groups will be selected to give the presentation.
During the discussion, students learn to use computational
thinking to solve practical problems. Session 3: programming
and verification. Each student independently programs with
Python to realize and verify the group solution. During the
implementation, the solution is constantly improved.
Form week 1 to week 5, as students are not proficient
in Python, session 1 and session 3 need more time, so the
teaching cases are relatively simple. From week 6 to week 12,
with the improvement of programming ability, the teaching
cases are more comprehensive, focusing on the training of
computational thinking. The discussion in session 2 and the
programming in session 3 will take up a lot more time.
V. CONCLUSION
In this paper, we showed our exploration and reform on the
school-enterprise course Python Data Analysis. We analyzed
the requirement of enterprises and determined the teaching
content accordingly. The teaching content was further organized around the cases designed from simple to deep. To
cultivate creativity and scientific exploratory ability, studentcentered teaching was performed. Students learned by trial,
exploratory and verification of cases. The benefit of casebased exploratory teaching of data analysis using Python is
that students will focus on how to use computational thinking
in practical data analysis rather than be overwhelmed by the
details of theory and programming.
ACKNOWLEDGMENT
This work was partially supported by the Industry and
Education Cooperation Project of the Ministry of Education
(No. 201802141006)
REFERENCES
[1] Introduction to computer science and programming using python.
https://www.edx.org/course/introduction-computer-science-mitx-6-00-1x-
5#!
[2] Introduction to computational thinking and data science.
https://www.edx.org/course/introduction-computational-thinking-datamitx-6-00-2x-2.
[3] Play with data in python. https://www.icourse163.org/course/nju-
1001571005.
[4] Python data analysis and presentation.
https://www.icourse163.org/course/bit-1001870002.
[5] Shuaiguo Wang. Smart teaching tools in the context of mobile internet
and big data. Modern Educational Technology, 5:26–32, 2017.
281
TuesP2.18